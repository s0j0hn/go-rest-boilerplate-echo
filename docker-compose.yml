version: '3.5'

services:
  rabbitmq:
    image: 'rabbitmq:3.6-management-alpine'
    ports:
      # The standard AMQP protocol port
      - '5672:5672'
      # HTTP management UI
      - '15672:15672'
    environment:
      # The location of the RabbitMQ server.  "rabbitmq" is the protocol;
      # "rabbitmq" is the hostname.  Note that there is not a guarantee
      # that the server will start first!  Telling the pika client library
      # to try multiple times gets around this ordering issue.
      AMQP_URL: 'rabbitmq://rabbitmq?connection_attempts=5&retry_delay=5'
      RABBITMQ_DEFAULT_USER: "guest"
      RABBITMQ_DEFAULT_PASS: "guest"
    networks:
      - local
  postgres:
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-boilerplate}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-boilerplate}
      POSTGRES_DB: ${POSTGRES_DB:-boilerplate}
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - local

networks:
  local:
    driver: overlay

volumes:
  postgres:
